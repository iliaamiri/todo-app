import type {NextPage} from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import useLocalStorage from "../hooks/useLocalStorage";
import {TodoItem as TodoItemModel} from "../models/TodoItem";
import TodoItem from "../components/TodoItem";
import {useState} from "react";
import AddPage from "../components/AddPage";
import React from 'react';
import NonSSRWrapper from "../components/NonSSRWrapper";

const Home: NextPage = () => {
    const [todos, setTodos] = useLocalStorage('todos', []);

    const addSubmitHandler = (todoItemText: string) => {
        setTodos((currentTodos: TodoItemModel[]) => {
            let maxId = 0;
            currentTodos.forEach((todoItem) => {
                if (todoItem.id > maxId)
                    maxId = todoItem.id;
            });

            currentTodos.push({
                id: maxId + 1,
                title: todoItemText,
                completed: false
            } as TodoItemModel);

            return [...currentTodos];
        });

        setAddPageMode(false);
    }

    const removeHandler = (todoItemId: number) => {
        setTodos((currentTodos: TodoItemModel[]) => {
            const newTodos = currentTodos.filter((todoItem) => todoItem.id !== todoItemId);
            return [...newTodos];
        });
    };

    const completeHandler = (todoItemId: number) => {
        setTodos((currentTodos: TodoItemModel[]) => {
            const todoItem = currentTodos.find(t => t.id == todoItemId);
            if (todoItem === undefined) {
                return;
            }
            todoItem.completed = true;
            return [...currentTodos];
        });
    };

    const [addPageMode, setAddPageMode] = useState<boolean>(false);

    return (
        <NonSSRWrapper>
            <div className={styles.container}>
                <Head>
                    <title>Todo App</title>
                    <meta name="description" content="Generated by create next app"/>
                    <link rel="icon" href="/favicon.ico"/>
                </Head>

                <main className={styles.main}>
                    <h1 className={styles.title}>
                        Todo App
                    </h1>

                    {
                        (addPageMode) ? (
                            <AddPage setAddPageMode={setAddPageMode} onAddSubmit={addSubmitHandler} />
                        ) : (
                            <>
                                <a href="#" className={styles.card} onClick={(event) => {
                                    event.preventDefault();
                                    setAddPageMode(true);
                                }}>
                                    <p>Add Todo</p>
                                </a>

                                <div className={styles.todoList}>
                                    {
                                        todos.map((todoItem: TodoItemModel) => (
                                            <TodoItem key={todoItem.id} todoItem={todoItem} onComplete={completeHandler}
                                                      onRemove={removeHandler}/>
                                        ))
                                    }
                                </div>
                            </>
                        )
                    }
                </main>
            </div>
        </NonSSRWrapper>
    )
}

export default Home
